/* ======================================================= */
/* --- COMPONENTE: CALCULADORA (Mejorado y Refactorizado) --- */
/* ======================================================= */

@use '../base/mixins' as *;

// --- Variables específicas del componente ---
$nav-height: 60px;
$keyboard-gap: 2px;

.calculator-container {
    position: relative;
    width: 100%;
    margin: auto 0; // Centra verticalmente el contenedor en el espacio disponible del body (flex).
    /* MEJORA: Aumentado el tamaño para que ocupe más espacio en pantallas grandes usando unidades relativas (vmin) */
    max-width: 80vmin;
    opacity: 0;
    transition: opacity 1s;

    // Efectos visuales consolidados
    --neon-color-1: var(--btn-equal-bg);
    --neon-color-2: var(--btn-special-bg);
    animation: neon-pulse 5s infinite alternate;

    // Layout flexible para móviles
    @include mobile {
        margin: 0; // En móvil, el contenedor ocupa todo el espacio, no necesita margen.
        max-width: none;
        margin-bottom: 0;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        animation: none;

        // La sección que contiene el teclado debe crecer para ocupar el espacio disponible.
        > section:last-of-type {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            min-height: 0; // Fix para que flex-grow funcione correctamente en contenedores anidados.
        }
    }
}

.display {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    width: 100%;
    min-height: 65px;
    margin-bottom: 15px;
    padding: 20px;
    background-color: var(--bg-display);
    color: var(--color-display-text);
    font-family: 'Chakra Petch', sans-serif;
    font-size: 2.2rem;
    text-align: right;
    border-radius: 10px;
    word-wrap: break-word;
    overflow: hidden;
    position: relative;

    // Efecto Glitch
    &.glitch {
        animation: glitch-main 0.3s linear;
        &::before, &::after { content: attr(data-text); position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: var(--bg-display); overflow: hidden; }
        &::before { left: 2px; text-shadow: -2px 0 var(--btn-op-bg); animation: glitch-anim-1 0.8s infinite linear alternate-reverse; }
        &::after { left: -2px; text-shadow: -2px 0 var(--btn-special-bg), 2px 2px var(--btn-equal-bg); animation: glitch-anim-2 0.6s infinite linear alternate-reverse; }
    }

    @include mobile {
        // MEJORA: Tipografía fluida y controlada
        width: 100%;
        margin: 0 0 15px;
        font-size: 2.5rem;
        min-height: 70px;
        padding: 15px;
        flex-shrink: 0; // Evita que el display se encoja cuando el teclado crece
        border-radius: 0;
    }
}

.keyboard-container {
    position: relative;
    width: 100%;
    aspect-ratio: 1 / 1;
    background-color: var(--bg-keyboard);
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    overflow: hidden;

    @include mobile {
        // El teclado se vuelve flexible para ocupar el espacio restante
        width: 100%;
        margin: 0;
        flex-grow: 1;           // Ocupa todo el espacio vertical disponible
        border-radius: 0;
        aspect-ratio: unset;    // Se quita la relación de aspecto para que la altura sea libre
        min-height: 0;          // Fix necesario para flexbox en algunos navegadores
    }
}

.keyboard {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: $keyboard-gap; // MEJORA: Usando variable SCSS
    width: 100%;
    height: 100%;
    transition: top 0.5s ease-in-out, opacity 0.3s ease-in-out;

    &--hidden { top: 100%; opacity: 0; pointer-events: none; }
    
    &__button {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        color: var(--btn-text-color);
        font-family: 'Chakra Petch', sans-serif;
        font-size: 1.4rem;
        border: 2px solid #000;
        overflow: hidden;
        transition: transform 0.1s ease, background-color 0.2s ease;

        &--number { background-color: var(--btn-num-bg); }
        &--operator { background-color: var(--btn-op-bg); }
        &--special { background-color: var(--btn-special-bg); font-size: 0.8em; }
        &--equals { background-color: var(--btn-equal-bg); }
        &--double-width { grid-column: span 2; }
        &--triple-width { grid-column: span 3; }

        &:not(:disabled):hover { background: linear-gradient(90deg, #ff0000, #ff8000, #ffff00, #00ff00, #00ffff, #0000ff, #ff00ff); background-size: 200% 200%; animation: arcoiris 2s linear infinite; transform: scale(1.05); }
        &:active:not(:disabled) { transform: scale(0.95); }
        &:disabled { background-color: var(--btn-disabled-bg); color: var(--btn-disabled-text); cursor: not-allowed; animation: none; transform: none; }

        .ripple { position: absolute; border-radius: 50%; background-color: rgba(255, 255, 255, 0.6); transform: scale(0); animation: ripple-effect 0.6s linear; pointer-events: none; }

        @include mobile {
            // MEJORA: Tipografía fluida y controlada
            font-size: 1.5rem;
            border-radius: 8px;
        }
    }
}

// =======================================================
// --- MEJORAS DE CONTRASTE PARA TEMA CLARO ---
// =======================================================
[data-theme="light"] {
    .output-grid {
        // Para textos de resultado final como en la división o la multiplicación
        &__result--division-final,
        &__result--multiplication-final {
            color: #2E7D32; // Verde oscuro (de la variable --color-resultado) para mejor contraste.
        }
    }

    // Para la tarjeta de resultado de la operación de potencia
    .power-result-card {
        background-color: #388E3C; // Un verde más oscuro que el --btn-equal-bg por defecto.
        color: #ffffff; // Texto blanco para máximo contraste.

        &:hover {
            // Sombra que coincide con el nuevo color de fondo más oscuro.
            box-shadow: 0 6px 20px rgba(56, 142, 60, 0.4);
        }
    }
}

// Estos botones deberían idealmente tener una clase, pero mantenemos los IDs
#botexp, #botnor {
    @include mobile {
        font-size: 0.9rem;
        padding: 12px 8px;
        height: 50px;
    }
}

.output-screen {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: calc(100% - #{$nav-height}); // MEJORA: Usando variable SCSS
    padding: 15px;
    background-color: var(--bg-output-screen);
    opacity: 0;
    pointer-events: none;
    overflow: auto;
    transition: opacity 0.3s ease-in-out;
    // MEJORA: Añadir transición para la expansión
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);

    &--expanded {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: 1000;
        border-radius: 0;
        padding: 20px;
        background-color: var(--bg-output-screen-expanded, var(--bg-output-screen));

        // MEJORA: En la vista expandida móvil, el botón de comprimir se posiciona más abajo.
        .output-screen__expand-btn {
            @include mobile {
                // Como no hay barra de navegación inferior en esta vista,
                // el botón puede estar más cerca del borde inferior.
                bottom: 20px;
            }
        }
    }

    &__expand-btn {
        position: absolute;
        top: 15px;
        right: 15px;
        z-index: 1010; // Por encima del contenido de la operación
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.2rem;
        transition: background-color 0.2s, transform 0.2s;

        &:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: scale(1.1);
        }

        // MEJORA: En la vista móvil, el botón se mueve a la parte inferior para un mejor acceso.
        @include mobile {
            // Se usa 'fixed' para que el botón permanezca visible aunque el contenido de la operación se desplace.
            position: fixed;
            top: auto;
            right: auto;
            // Se posiciona 15px por encima de la barra de navegación inferior.
            bottom: calc(#{$nav-height} + 15px);
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 50px;
        }
    }

    // --- NUEVO: Botón para volver a la calculadora en vista expandida ---
    &__back-btn {
        position: absolute;
        top: 15px;
        left: 15px; // Posicionado en la esquina opuesta
        z-index: 1010;
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.2rem;
        transition: background-color 0.2s, transform 0.2s;

        &:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: scale(1.1);
        }
    }

    // --- NUEVO: Estilos interactivos y explicativos para la operación de Potencia ---
    .power-subtitle {
        font-style: italic;
        color: var(--history-input-color);
        opacity: 0.8;
    }

    .power-step-card {
        background-color: var(--bg-display);
        border: 1px solid var(--color-lineas-output);
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        transition: transform 0.2s ease, box-shadow 0.2s ease;

        // Interacción al pasar el cursor
        &:hover {
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 4px 10px rgba(0,0,0,0.3);
            z-index: 10; // Asegura que se vea por encima de otras tarjetas
        }
    }

    .power-result-card {
        background-color: var(--btn-equal-bg);
        color: #ffffff; // MEJORA: Texto blanco para un contraste alto sobre el fondo verde.
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.3);
        transition: transform 0.2s ease, box-shadow 0.2s ease;

        // Interacción al pasar el cursor
        &:hover {
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 6px 20px rgba(var(--focus-color), 0.4);
        }
    }


    &--visible { opacity: 1; pointer-events: all; }

    &__error-message {
        width: 90%; margin: auto; color: var(--color-error); font-size: 1.2rem; text-align: center;
        @include mobile {
            font-size: clamp(1rem, 4.5vw, 1.5rem);
            padding-top: 25%;
        }
    }

    .output-grid {
        &__cell { position: absolute; display: flex; align-items: center; justify-content: center;
            // MEJORA: Paleta de colores más vibrante y consistente para las operaciones.
            // Estos colores provienen de tus archivos de mejoras, ahora unificados aquí.
            &--dividendo { color: orange; font-weight: bold; } 
            &--divisor { color: lightblue; font-weight: bold; } 
            &--cociente { color: lightgreen; font-weight: bold; }
            &--producto { color: #ccc; } // Se mantiene un color neutro para los productos intermedios
            &--resto { color: #f08080; font-weight: bold; } 
            &--suma-intermedia { color: #f0ad4e; font-weight: bold; z-index: 10; animation: fadeIn 0.3s ease-out; }
        }
        &__line { 
            position: absolute; 
            background-color: var(--color-lineas-output); 
        }
        // MEJORA: Estilo unificado para el resultado final de una operación.
        &__result--division-final {
            font-family: 'Courier New', monospace;
            font-size: 1.1rem;
            font-weight: bold;
            color: var(--focus-color); // Un color verde brillante para destacar.
            margin-bottom: 10px;
            width: 100%;
        }
        // MEJORA: Estilo para el resultado final de la multiplicación, para manejar números grandes.
        &__result--multiplication-final {
            font-family: 'Roboto Mono', monospace; // Fuente monoespaciada para claridad
            font-size: 1.1rem;
            font-weight: bold;
            color: var(--focus-color);
            background-color: rgba(0, 0, 0, 0.2); // Fondo ligero para indicar el área
            padding: 8px 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            width: 100%;
            white-space: nowrap; // Evita que el texto salte de línea
            overflow-x: auto;    // Permite el desplazamiento horizontal si el contenido se desborda
            text-align: left;    // Alineación a la izquierda para que el scroll sea natural

            // Scrollbar personalizado para mejor estética
            &::-webkit-scrollbar { height: 5px; }
            &::-webkit-scrollbar-track { background: rgba(255, 255, 255, 0.05); border-radius: 10px; }
            &::-webkit-scrollbar-thumb { background: var(--focus-color); border-radius: 10px; }
            &::-webkit-scrollbar-thumb:hover { background: #55dd55; }
        }
    }
    
    @include mobile {
        font-size: clamp(1.2rem, 5vw, 1.8rem);
        #divvolver {
            padding: 15px;
        }
    }
}

.operation-content {
    width: 100%;
    height: 100%;
    position: relative;
}


.bottom-nav {
    position: absolute;
    bottom: -100%;
    left: 0;
    z-index: 3;
    display: flex;
    justify-content: space-around;
    align-items: center;
    gap: 8px;
    width: 100%;
    height: $nav-height; // MEJORA: Usando variable SCSS
    padding: 10px;
    background-color: var(--nav-bg);
    opacity: 0;
    pointer-events: none;
    transition: bottom 0.5s ease-in-out, opacity 0.3s ease-in-out;

    &--visible { bottom: 0; opacity: 1; pointer-events: all; }

    &__button {
        flex-grow: 1;
        padding: 10px;
        background-color: var(--bottom-nav-btn-bg);
        color: var(--bottom-nav-btn-text);
        text-align: center;
        border-radius: 5px;
        transition: background-color 0.2s, color 0.2s;

        &:hover { background-color: var(--bottom-nav-btn-hover-bg); color: var(--bottom-nav-btn-hover-text); }

        &--arrow {
            font-family: 'Outfit', sans-serif;
            // Estilos base para escritorio, ahora controlados 100% por CSS
            font-size: 1.8rem;

            @include mobile {
                // Aumentamos significativamente el tamaño para una mejor experiencia táctil.
                // Ya no se necesita !important porque JS no interfiere.
                // MEJORA: Hacemos que el botón ocupe todo el ancho disponible en el contenedor padre.
                font-size: 2.5rem; // Se ajusta el tamaño del ícono para el nuevo ancho.
                width: auto;       // El ancho ahora es flexible.
                height: 100%; // Ocupa toda la altura de la barra de navegación
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                flex-grow: 1; // Permite que el botón se expanda para llenar el espacio.
            }
        }
    }
}